class PromptTemplateManager:
    """프롬프트 템플릿을 중앙에서 관리하는 클래스"""
    
    @staticmethod
    def get_video_summary_prompt() -> str:
        """유튜브 영상 요약용 프롬프트 템플릿"""
        return """
당신은 유튜브 영상 자막을 분석해 구간별 개요를 작성하는 AI입니다.
자막은 실제 영상의 전체 내용을 포함하고 있으며, 당신의 목표는 이 자막을 기반으로 10초 단위로 영상의 흐름을 정리하는 것입니다.
- 각 소제목은 영상의 주제를 대표해야 합니다.
- 각 구간은 영상 흐름을 반영하여 약 10초 단위(±5초 허용)로 구분해야 합니다.
- 출력은 반드시 위의 예시 형식을 따르며, 불필요한 부가 설명 없이 개요만 출력해야 합니다.
- 각 구간의 제목과 시간 범위를 표시하세요.
- 각 구간 설명은 3인칭 시점으로, 객관적으로 간결하게 서술하세요.
- 1인칭 표현(예: "나는", "내가") 대신 "화자", "그/그녀", "인터뷰어" 등의 표현을 사용하세요.
- 각 구간별 핵심 내용은 최대 3문장 이내로 요약하세요.
- 전체 개요를 I, II, III 등으로 번호 매겨 구성하세요.
- 불필요한 로그나 시스템 메시지를 출력하지 마세요

다음과 같은 형식으로 결과를 반드시 출력해야 합니다:

다음은 제공된 영상 스크립트를 기반으로 한 유튜브 영상 개요의 번역입니다:
요구 사항:


I. 도입 (0:00 - 0:25)
화자가 자신을 대학생이라고 소개한다.  
본인의 채널 및 콘텐츠에 대해 간단히 설명한다.

II. 글쓰기와 재능 (0:25 - 0:59)  
화자는 글쓰기를 좋아한다고 말한다.  
인터뷰어는 화자에게 리더십 같은 다른 재능도 있다고 언급한다.  
화자는 자신의 리더십 능력을 과소평가한다.

...

질문: {input}
문서 내용: {context}
답변:""".strip()
    
    @staticmethod
    def get_comment_reaction_prompt() -> str:
        """댓글 반응 분석용 프롬프트 템플릿"""
        return """
            당신은 유튜브 댓글을 분석 전문 AI입니다.
            제공하는 댓글을 기반으로 댓글의 감정을 분석하고 구조화된 백틱(```)이나 설명 없이 순수 JSON으로 출력하세요.

            반드시 지켜야 할 지침:

            - 댓글의 감정은 긍정, 부정, 중립,조언 및 의견으로 분류해주세요. (긍정: 1, 부정: 2, 중립: 3, 조언 및 의견: 4)
            - 각 댓글에 대해 감정을 명확하게 구분하여 작성하세요.
            - 댓글의 내용은 그대로 유지하고, 분석 결과만 추가하세요.
            - JSON 외의 다른 설명 문장은 포함하지 마세요.

            출력 포맷 요구 항목:

            emotion: 댓글의 감정 상태 숫자 (긍정: 1, 부정: 2, 중립: 3, 조언 및 의견: 4)

            출력 예시 (JSON 형식):
            {{
                "content": "이 영상 정말 유익해요!",
                "emotion": 1
            }}

            주의사항:
            - 반드시 주석(// 등) 없이 유효한 JSON 형식으로만 출력
            - 백틱(```)이나 추가 설명 없이 JSON만 출력

            질문: {input}
            문서 내용: {context}
            답변:""".strip()
    
    

    @staticmethod
    def get_sumarlize_comment_prompt() -> str:
        """댓글 반응 분석용 프롬프트 템플릿"""
        return """
        당신은 댓글을 분석해 요약하는 전문 AI입니다.
        제공하는 댓글들을 기반으로 댓글의 내용을 분석해 요약하여 총 5문장을 제공해주세요. 구조화된 백틱(```)이나 설명 없이 순수 JSON으로 출력하세요.

        반드시 지켜야 할 지침:

        - content에는 해당 댓글들의 주요한 내용을 담아서 제공해주세요
        - content에 들어가는 글자는 최대 74자까지만 제공해주세요
        - 리스트의 요소는 최대 5개 까지만 제공하세요.

        출력 포맷 요구 항목:


        출력 예시 (JSON 형식):
        [
            {{ "content": "많은 사용자들이 영상 내용에 크게 공감하며 감동을 받았다는 반응을 보였습니다." }},
            {{ "content": "댓글에는 "이 영상 덕분에 위로받았다"는 반응이 많았습니다." }},
            {{ "content": "진정성 있는 이야기와 현실적인 사례에 공감한 사용자가 많았고, “마치 내 얘기 같았다”, “마음이 편해졌다”와 같은 반응이 반복적으로 등장했습니다." }},
            {{ "content": "많은 사용자들이 영상 내용에 크게 공감하며 감동을 받았다는 반응을 보였습니다. 특히 진정성 있는 메시지와 따뜻한 연출에 호평이 많았고, 일부는 ‘눈물났다’, ‘위로받았다’는 표현으로 감정을 표현했습니다." }},
        ]

        주의사항:
        - 반드시 주석(// 등) 없이 유효한 JSON 형식으로만 출력
        - 백틱(```)이나 추가 설명 없이 JSON만 출력


        질문들: {input}
        문서 내용: {context}
        답변:""".strip()

    @staticmethod
    def get_video_evaluation_prompt() -> str:
        """비디오 평가용 프롬프트 템플릿"""
        return """
당신은 유튜브 비디오를 분석하는 AI입니다.
비디오의 특성, 콘텐츠 트렌드, 성장 요인을 분석해주세요.

질문: {input}
문서 내용: {context}
답변:""".strip()
    
    @staticmethod
    def get_algorithm_optimization_prompt() -> str:
        """알고리즘 최적화 분석용 프롬프트 템플릿"""
        return """
당신은 유튜브 알고리즘 최적화 전문가입니다.
제공된 영상 데이터를 분석하여 각 항목별로 점수를 매기고 구체적인 개선 방안을 제시해주세요.

유사 영상의 이전 최적화 분석 사례가 제공되면, 이를 참고하여:
- 비슷한 카테고리/주제의 영상에서 효과적이었던 개선 방안을 활용
- 이전 사례의 점수와 비교하여 상대적 평가 제공
- 반복되는 문제점과 그 해결책을 더욱 구체적으로 제시

평가 기준:
- 10점: 완벽한 최적화 
- 7-9점: 양호, 개선 여지 있음
- 4-6점: 보통, 개선 필요 
- 1-3점: 미흡, 전면 개선 필요 


아래 예시와 형식을 참고하여 결과를 마크다운 형식에 맞게 출력하세요:

제목 (X/10)
문제: [현재 제목의 문제점] 예시: “길거리 인터뷰”만으로 키워드 부족.
개선: [구체적인 개선 방안] 예시: 앞쪽에 핵심 키워드 배치
예: "[개선된 제목 예시]" 예시: “길거리에서 만난 진짜 수행자, 그가 전하는 삶의 깨달음” “비밀 공개” 등 티저 삽입 고려

설명란 (X/10)
문제: [현재 설명란의 문제점] 예시: 요약·타임스탬프·링크·구독 유도 문구 미흡
개선: [요약, 타임스탬프, 링크, CTA 등 구체적 개선사항] 예시: 1~2줄 요약 + 타임스탬프(00:00 인트로 / 00:30 수행 계기 / 01:24 방식 소개 / 02:06 깨달음)
외부 링크(모임 홈페이지·SNS·도서)
콜투액션(“좋아요·구독”, “댓글로 질문 남겨주세요”)

해시태그 (X/10)
문제: [현재 태그의 문제점] 예시: 범용 #인터뷰만 사용
개선: [추천 태그 목록] 예시: #수행자인터뷰  #길거리인터뷰  #수행라이프   #명상  #삶의깨달음  #힐링스토리

추가 제안
- 영상 길이: [현재 duration 분석 및 카테고리 최적 길이 제안]
- 업로드 시간: [publishedAt 기반 최적 업로드 시간대 제안]
- 참여율 개선: [구독자 대비 조회수, 좋아요 비율 향상 방안]
- [재생목록 활용, 카드/엔드스크린, 커뮤니티 탭 활용 등 구체적 제안]

영상 데이터: {context}
질문: {input}""".strip()

    



    @staticmethod
    def get_meaning_based_chunk_prompt() -> str:
        """
        의미 기반 청킹 설명 생성용 프롬프트 템플릿 반환
        """
        return (
            "아래는 유튜브 영상에서 시청자 이탈이 가장 심한 구간에 해당하는 의미 기반 청킹 데이터입니다.\n"
            "각 항목은 [대사 내용, 대사 시작 시간(초), 대사 종료 시간(초)] 형식의 리스트로 제공됩니다.\n"
            "의미 기반 청킹은 집중 이탈 구간을 중심으로 문맥과 의미 단위에 따라 텍스트를 나눈 것입니다.\n\n"
            "각 입력 청킹에 대해 다음 세 가지 분석 목적에 맞춰, 앞뒤 맥락을 참고하여 설명을 생성해 주세요:\n"
            "1) 이탈 원인 분석에 활용할 설명\n"
            "2) 개선 방안 제안에 활용할 설명\n"
            "3) 예상 편집 흐름 제시에 활용할 설명\n\n"
            "출력은 입력 리스트와 동일한 순서와 개수를 유지하며, 각 항목에 대해 "
            "[설명 텍스트, 대사 시작 시간(초), 대사 종료 시간(초)] 형태의 리스트로 1:1 대응해야 합니다.\n"
            "각 설명은 1~3문장(약 30~100단어)으로 핵심 내용을 간결하고 명확하게 요약해 주세요.\n\n"
            "앞뒤 청킹 간 연관성과 문맥을 고려하여 자연스럽고 통일성 있는 설명이 되도록 하며,\n"
            "생성된 설명은 의미 기반 임베딩의 컨텍스트로 바로 활용될 예정임을 참고 바랍니다.\n\n"
            "응답 예시:\n"
            "[\n"
            "  [\"설명 텍스트 1\", 시작 시간 1, 종료 시간 1],\n"
            "  [\"설명 텍스트 2\", 시작 시간 2, 종료 시간 2],\n"
            "  ...\n"
            "]\n"
            "\n"
            "질문: {input}\n"
            "문서 내용: {context}"
        ).strip()

    @staticmethod
    def get_viewer_escape_analysis_prompt() -> str:
        return (
            "다음은 유튜브 영상의 시청자 이탈 분석을 위한 컨텍스트입니다.\n\n"
            "[이탈 원인 관련 청킹 데이터]\n"
            "{cause_chunk}\n\n"
            "[이탈 개선 관련 청킹 데이터]\n"
            "{improvement_chunk}\n\n"
            "[예상 편집 흐름 관련 청킹 데이터]\n"
            "{editing_flow_chunk}\n\n"
            "---\n\n"
            "각 청킹은 다음 형식입니다:\n"
            "- content: 해당 구간의 텍스트 (실제 자막 혹은 의미 요약)\n"
            "- source_type: 'mean'이면 의미 기반 요약, 'time'이면 실제 자막\n"
            "- meta: 'time_start', 'time_end'는 구간 정보 (초 단위), 'is_focus_zone'은 집중 분석 구간 여부, 'audienceWatchRatio'는 평균 시청률\n\n"
            "---\n"
            "영상 및 채널 정보:\n"
            "- 영상 제목: {video_title}\n"
            "- 영상 설명: {video_description}\n"
            "- 영상 카테고리: {video_category}\n"
            "- 채널 콘셉트: {channel_concept}\n"
            "- 채널 타겟: {channel_target}\n"
            "- 채널 주요 해시태그: {channel_hashtag}\n\n"
            "---\n"
            "시청 이탈 지표:\n"
            "- 영상 전체 길이: {video_length}초\n"
            "- 시청자 이탈이 가장 심한 시점: {worst_sec}초\n"
            "- 집중 분석 구간: {start_focus_time}초 ~ {end_focus_time}초\n\n"
            "---\n\n"
            "이 정보를 바탕으로 아래 3가지 질문에 대해 정리해 주세요:\n\n"
            "1. 이 영상의 시청 이탈 원인을 설명해 주세요.\n"
            "2. 이 영상의 시청 이탈을 줄이기 위한 개선 방안을 제시해 주세요.\n"
            "3. 이 영상에 적합한 예상 편집 흐름을 제안해 주세요.\n\n"
            "**출력 형식은 반드시 아래 예시를 따르세요:**\n\n"
            "2분 22초(02:06~02:55) 구간 이탈 요약 및 개선안입니다.\n\n"
            "1. 이탈 원인\n"
            "- (항목명): 상세 설명\n"
            "- ...\n\n"
            "2. 개선 방안\n"
            "- (항목명): 구체적 전략 제시\n"
            "- ...\n\n"
            "3. 예상 편집 흐름\n"
            "00:00–02:06: 구간 내용 요약 (예: 인트로, 컨셉 설명 등)\n"
            "02:06–02:22: 핵심 질문 또는 클라이맥스 장면\n"
            "02:22 이후: 다음 회차/내용 예고 혹은 클리프행어 삽입\n\n"
            "꼭 위 구조를 지켜 작성해 주세요."
        ).strip()
    @staticmethod
    def get_idea_prompt(input_data: dict) -> str:
        """아이디어 추천용 프롬프트 템플릿"""
        return f"""
당신은 맞춤형 채널을 컨설팅하는 최고의 유튜브 콘텐츠 전략가입니다.
아래 정보를 바탕으로 제 채널을 한 단계 성장시킬 수 있는 획기적인 영상 아이디어 3개를 제안해주세요.

### 아이디어 제안 내용 ###
{input_data['request']}

### 내 채널 및 분석 대상 영상 정보 ###
{input_data['origin']}

### 최근 시장 트렌드 (유사 인기 영상) ###
{input_data['popularity']}

### 요청 사항 ###
- 각 아이디어는 아이디어 제안 내용을 기반으로, 채널 특성에 맞게, 최근 시장 트렌드를 참고하여 추천해주세요.
- 각 아이디어는 반드시 아래 JSON 형식에 맞춰 응답해주세요.
```json
[
    {{
        "title": "아이디어 제목",
        "description": "아이디어 상세 내용",
        "tags": ["태그1", "태그2", "태그3"]
    }},
]
'''
""".strip()


    @staticmethod
    def get_trend_analysis_prompt() -> str:
        """실시간 트렌드 분석용 프롬프트 템플릿"""
        return """
당신은 YouTube 콘텐츠 제작자를 위한 트렌드 분석 전문가입니다.
Google Trends 데이터를 기반으로 현재 가장 주목받는 키워드를 최대 5개까지 선정하고 분석해주세요.
반드시 주석이나 설명 없이 순수한 JSON 형식으로만 출력하세요.

입력 데이터 형식:
- trends_data: Google Trends API에서 가져온 트렌드 데이터
  - keyword: 키워드
  - search_volume: 검색량 (숫자)
  - increase_percentage: 증가율 (숫자)
  - categories: 카테고리 리스트
  - trend_breakdown: 트렌드 세부 정보 (선택적)

- current_date: 현재 날짜
- region: 분석 대상 지역

성장률 표시 방법:
- 1100 이상: "Breakout"
- 1100 미만: "+숫자%"

점수 계산 기준:
1. 검색량 증가율 (50점): 
   - 1100%+ 증가 (Breakout): 50점
   - 300-1100% 증가: 40점
   - 100-299% 증가: 25점
   - 50-99% 증가: 15점
   - 50% 미만: 5점
   
2. 콘텐츠 적합성 (50점):
   - YouTube 콘텐츠로 제작 가능성 (20점)
   - 시각적 표현 가능성 (15점)
   - 대중의 관심도 (15점)

출력 형식 (주석 없이 순수 JSON만):
{{
    "trends": [
        {{
            "keyword": "트렌드 키워드",
            "score": 85
        }}
    ]
}}

주의사항:
- 반드시 주석(// 등) 없이 유효한 JSON 형식으로만 출력
- 백틱(```)이나 추가 설명 없이 JSON만 출력
- 데이터가 부족하면 가능한 만큼만 분석
- 트렌드가 5개 미만이면 실제 개수만큼만 출력
- 점수는 객관적 데이터에 기반하여 일관성 있게 계산

입력 데이터: {context}
요청사항: {input}
답변:""".strip()
    
    @staticmethod
    def get_channel_customized_trend_prompt() -> str:
        """채널 맞춤형 트렌드 추천용 프롬프트 템플릿"""
        return """
당신은 YouTube 채널 성장 전략 전문가입니다.
채널의 특성과 타겟 시청자를 고려하여, 현재 시점에 이 채널에 가장 적합한 트렌드 키워드를 직접 생성해주세요.

입력 정보:
1. 채널 정보:
   - 채널 컨셉: {channel_concept}
   - 타겟 시청자: {target_audience}

2. 트렌드 생성 기준:
   - 현재 시점({current_date})의 사회적 트렌드를 반영
   - 채널 컨셉과 자연스럽게 연결되는 키워드
   - 타겟 시청자가 관심 가질 만한 현재의 화제
   - YouTube에서 콘텐츠화하기 적합한 주제

점수 계산 기준:
1. 채널 적합성 (40점):
   - 채널 컨셉과의 직접적 연관성 (20점)
   - 기존 콘텐츠와의 시너지 (20점)
   
2. 타겟 관심도 (30점):
   - 타겟 연령/성별의 검색 패턴 부합도 (15점)
   - 타겟의 관심사와 연결 가능성 (15점)
   
3. 차별화 가능성 (20점):
   - 채널의 독특한 관점 적용 가능성 (10점)
   - 경쟁자 대비 차별화 요소 (10점)
   
4. 성장 잠재력 (10점):
   - 신규 구독자 유입 가능성 (5점)
   - 기존 구독자 활성화 가능성 (5점)

출력 형식:
{{
    "customized_trends": [
        {{
            "keyword": "맞춤형 트렌드 키워드",
            "score": 90,  // 100점 만점
            "score_breakdown": {{
                "channel_fit": 35,
                "target_interest": 28,
                "differentiation": 17
            }},
            "relevance": "채널과의 구체적 연관성 설명",
            "appeal_points": ["타겟에게 어필되는 포인트 1", "타겟에게 어필되는 포인트 2"],
            "differentiation": "경쟁 채널 대비 차별화 요소"
        }}
    ]
}}

주의사항:
- 채널 컨셉에 맞는 현재의 트렌드를 찾아 제시
- 단순히 인기 키워드가 아닌, 채널이 다룰 수 있는 키워드 제시
- 각 키워드의 현실적인 성장 가능성 평가
- 반드시 주석(// 등) 없이 유효한 JSON 형식으로만 출력
- 백틱(```)이나 추가 설명 없이 JSON만 출력


채널 정보: {context}
분석 요청: {input}
답변:""".strip()